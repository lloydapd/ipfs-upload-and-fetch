import { useState, useEffect } from 'react'
import Head from 'next/head'
import Link from 'next/link'
import styles from '../styles/Home.module.css'
import { create, urlSource } from 'ipfs-http-client'
import {
  Input, FormControl, Select, Image, FormLabel, Heading, Text, Box, Stack, HStack, VStack, Container, Button, flattenTokens
} from '@chakra-ui/react'

const FormInput = ({ label, htmlFor, ...rest }) => (
  <FormControl>
    <FormLabel htmlFor={htmlFor}>{label}</FormLabel>
    <Input {...rest} />
  </FormControl>
)

export default function Home() {
  const [item, setItem] = useState({})
  const [data, setData] = useState({})
  const [path, setPath] = useState("")
  const [cid, setCid] = useState("")
  const [imageUrl, setImageUrl] = useState(``)

  const client = create("https://ipfs.infura.io:5001/api/v0")

  useEffect(() => {
    fetchData()
    setData({...data})
  }, [cid])

  console.log(data)

  async function fetchData() {
    const data = await fetch(path)
    const file = await data.json()
    setData(file)
  }

  function onChange({ target: { name, value } }) {
    setItem({ ...item, [name]: value, "image": imageUrl })
    console.log(item)
  }

  async function createItem() {
    const file = JSON.stringify(item)
    try {
      const added = await client.add(file)
      const url = `https://cloudflare-ipfs.com/ipfs/${added.path}`
      setPath(url)
      setCid(added.path)
      console.log(url)
    } catch (error) {
      console.log('Error uploading file: ', error)
    }
  }

  async function uploadImage(e) {
    const file = e.target.files[0]
    try {
      const added = await client.add(file)
      const url = `https://cloudflare-ipfs.com/ipfs/${added.path}`
      setImageUrl(url)
      console.log(url)
    } catch (error) {
      console.log('Error uploading file: ', error)
    }
  }

  return (
    <Container maxW="container.xl">
      <Head>
        <title>IPFS Upload</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <FormInput onChange={onChange} name="name" label="Item name" />
      <FormInput onChange={onChange} name="description" label="Description" />
      <FormInput type="number" onChange={onChange} name="price" label="Price" />
      <FormInput type="file" onChange={uploadImage} name="image" label="Upload Image" />
      <Select onChange={onChange} name="currency" placeholder='Select Currency'>
        <option value='bnb'>BNB</option>
        <option value='eth'>ETH</option>
        <option value='cake'>CAKE</option>
      </Select>
      <Button onClick={createItem}>Create</Button>
      <Text>{data.name}</Text>
      <Image boxSize={200} src={data.image} />
    </Container>
  )
}
